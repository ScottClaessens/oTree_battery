fit <- lm(formula, data=d)
return(coef(fit))
}
bootResults <- boot(statistic = bootReg, formula = happy ~ money + sex + love + work, data=happy, R = 4000)
summary(bootResults)
bootResults
boot.ci(bootResults, type="bca", index=2)
lmodSummary
boot.ci(bootResults, type="bca", index=2)
confint(lmod)
data(punting)
head(punting)
lmod <- lm(Distance ~ RStr + LStr + RFlex + LFlex, punting)
summary(lmod)
nullModel <- lm(Distance ~ 1, punting)
anova(nullModel,lmod)
lmodStrRemoved <- update(lmod, .~. - RStr - LStr, punting)
anova(lmodStrRemoved, lmod)
summary(lmodStrRemoved)
summary(nullModel)
mean(punting$Distance)
data(fat)
head(fat)
lmod <- lm(brozek ~ siri + density + age + weight + height + adipos + free + neck + chest + abdom + hip + thigh + knee + ankle + biceps + forearm + wrist, fat)
?model.matrix
x <- model.matrix(lmod)
x
?apply
(x0 <- apply(x,2,median))
?predict
predict(lmod, new=data.frame(t(x0)))
summary(lmod)
lmod <- lm(brozek ~ age + weight + height + neck + chest + abdom + hip + thigh + knee + ankle + biceps + forearm + wrist, fat)
x <- model.matrix(lmod)
(x0 <- apply(x,2,median))
predict(lmod, new=data.frame(t(x0)))
predict(lmod, new=data.frame(t(x0)), interval = "confidence")
predict(lmod, new=data.frame(t(x0)), interval = "prediction")
summary(lmod)
data(airpass)
head(airpass)
data(airpass)
library(faraway)
data(airpass)
head(airpass)
plot(pass ~ year, airpass, type="l",ylab="Log(Passengers)")
lmod <- lm(log(pass) ~ year, airpass)
lines(exp(predict(lmod)) ~ year, airpass)
lagdf <- embed(log(airpass$pass),14)
?embed
lagdf
embed(c(1,2,3,4,5,6),2)
embed(c(1,2,3,4,5,6),3)
log(airpass$pass) == lagdf[,1]
log(airpass$pass) == lagdf[1,]
log(airpass$pass)
colnames(lagdf) <- c("y",paste0("lag",1:13))
head(lagdf)
lagdf <- data.frame(lagdf)
armod <- lm(y ~ lag1 + lag12 + lag13, lagdf)
summary(armod)
plot(pass ~ year, airpass, type="l")
lines(airpass$year[14:144], exp(predict(armod)), lty=2)
lagdf[nrow(lagdf),]
exp(6.068426)
predict(armod, data.frame(lag1=6.0684, lag12=6.0331, lag13=6.0039), interval = "prediction")
exp(predict(armod, data.frame(lag1=6.0684, lag12=6.0331, lag13=6.0039), interval = "prediction"))
data(prostate)
head(prostate)
lmod <- lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp + gleason + pgg45, prostate)
predict(lmod, data.frame(lcavol=1.44692, lweight=3.62301, age=65.00000, lbph=0.30010, svi=0, lcp=-0.79851, gleason=7.00000, pgg45=15.00000), interval = "prediction")
summary(prostate$age)
predict(lmod, data.frame(lcavol=1.44692, lweight=3.62301, age=25.00000, lbph=0.30010, svi=0, lcp=-0.79851, gleason=7.00000, pgg45=15.00000), interval = "prediction")
4.847695 - 1.501384
3.813447 - 0.9646584
summary(lmod)
lmod2 <- update(lmod, .~. - age - lbph - lcp - gleason - pgg45, prostate)
predict(lmod2, data.frame(lcavol=1.44692, lweight=3.62301, age=65.00000, lbph=0.30010, svi=0, lcp=-0.79851, gleason=7.00000, pgg45=15.00000), interval = "prediction")
predict(lmod, data.frame(lcavol=1.44692, lweight=3.62301, age=65.00000, lbph=0.30010, svi=0, lcp=-0.79851, gleason=7.00000, pgg45=15.00000), interval = "prediction")
summary(lmod2)
anova(lmod2, lmod)lmod
anova(lmod2, lmod)
data(teengamb)
data(newhamp)
head(newhamp)
colSums(newhamp$Obama)
colSums(newhamp[newhamp$votesys == "D",2:3]
)
colSums(newhamp[newhamp$votesys == "H",2:3])
as.matrix(c(86353,96890),c(16926,14471))
as.matrix(c(86353,96890,16926,14471),2)
?as.matrix
as.matrix(c(86353,96890,16926,14471),ncol=2,nrow=2)
as.matrix(data = c(86353,96890,16926,14471), ncol=2, nrow=2, byrow=T)
as.matrix(data = c(86353,96890,16926,14471), ncol=2, byrow = TRUE)
matrix(data = c(86353,96890,16926,14471), ncol=2, byrow = TRUE)
crosstab <- matrix(data = c(86353,96890,16926,14471), ncol=2, byrow = TRUE)
colnames(crosstab) <- c("Obama","Clinton")
rownames(crosstab) <- c("D","H")
crosstab
chisq.test(crosstab)
contTable <- crosstab
remove(crosstab)
CrossTable(contTable, fisher=T, chisq=T, expected=T, sresid=T, format="SPSS")
library(gmodels)
CrossTable(contTable, fisher=T, chisq=T, expected=T, sresid=T, format="SPSS")
remove(contTable)
newhamp$trt <- ifelse(newhamp$votesys == "H", 1, 0)
lmodu <- lm(pObama ~ trt, newhamp)
summary(lmodu)
lmodz <- lm(pObama ~ trt + Dean, newhamp)
summary(lmodz)
require(Matching)
install.packages("Matching")
require(Matching)
library(Matching)
set.seed(123)
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties=FALSE, caliper=0.05, pop.size=1000)
install.packages("rgenoud")
library(rgenoud)
mm <- GenMatch(newhamp$trt, newhamp$Dean, ties=FALSE, caliper=0.05, pop.size=1000)
head(mm$matches[,1:2])
newhamp[c(4,218),c("Dean","pObama","trt")]
plot(pObama ~ Dean, newhamp, pch=trt+1)
with(newhamp, segments(Dean[mm$match[,1]],pObama[mm$match[,1]],Dean[mm$match[,2]],pObama[mm$match[,2]]))
pdiff <- newhamp$pObama[mm$matches[,1]] - newhamp$pObama[mm$matches[,2]]
t.test(pdiff)
plot(pdiff ~ newhamp$Dean[mm$matches[,1]], xlab="Dean", ylab="Hand-Digital")
abline(h=0)
plot(pObama ~ Dean, newhamp, pch=trt+1)
head(newhamp)
abline(h=c(0.353, 0.353+0.042), lty=1:2)
abline(0.221, 0.5229)
abline(0.221-0.005, 0.5229, lty=2)
with(newhamp, segments(Dean$match[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col=gray(0.75)))
with(newhamp, segments(Dean[mm$match[,1]], pObama[mm$match[,1]], Dean[mm$match[,2]], pObama[mm$match[,2]], col=gray(0.75)))
library(faraway)
data("teengamb")
head(teengamb)
lmodFull <- lm(gamble ~ sex + status + income + verbal, teengamb)
lmodStatusIncome <- update(lmodFull, .~. - verbal, teengamb)
lmodStatusVerbal <- update(lmodFull, .~. - income, teengamb)
lmodIncomeVerbal <- update(lmodFull, .~. - status, teengamb)
lmodStatus <- update(lmodFull, .~. - income - verbal, teengamb)
lmodIncome <- update(lmodFull, .~. - status - verbal, teengamb)
lmodVerbal <- update(lmodFull, .~. - status - income, teengamb)
lmodBaseline <- lm(gamble ~ sex, teengamb)
summary(lmodBaseline)
lmodBaseline$coefficients
lmodBaseline$coefficients[2]
typeof(lmodBaseline$coefficients[2])
S <- summary(lmodBaseline)
S$coefficients
?data.frame()
d <- data.frame(Estimate=NA, StdError=NA, t=NA, p=NA, loConfInt=NA, hiConfInt=NA)
S$coefficients[,2]
S$coefficients[2,
]
S$coefficients[,2]
d[1,1:4] <- summary(lmodBaseline)$coefficients[,2]
View(d)
confint(lmodBaseline)
confint(lmodBaseline)$[2,]
confint(lmodBaseline)[2,]
d[1,1:4] <- NA
S$coefficients
S$coefficients[2,]
d[1:4,1] <- 1
d[1:4,1] <- NA
d[1,1:4] <- S$coefficients[2,]
confint(lmodBaseline)[2,]
confint(lmodBaseline)
d[1,5:6] <- confint(lmodBaseline)[2,]
S <- summary(lmodIncome);
d[2,1:4] <- S$coefficients[2,];
d[2,5:6] <- confint(lmodIncome)[2,]
S
rownames(d) <- c("Baseline","Income","Status","Verbal","IncomeVerbal","StatusIncome","StatusVerbal","Full")
d[1,3:8] <- NA
d[,3:8] <- NA
d <- data.frame(Estimate=NA, StdError=NA, t=NA, p=NA, loConfInt=NA, hiConfInt=NA)
d[2:8,] <- NA
rownames(d) <- c("Baseline","Income","Status","Verbal","IncomeVerbal","StatusIncome","StatusVerbal","Full")
S <- summary(lmodBaseline)
S <- summary(lmodBaseline);
d[1,1:4] <- S$coefficients[2,];
d[1,5:6] <- confint(lmodBaseline)[2,]
S <- summary(lmodIncome);
d[2,1:4] <- S$coefficients[2,];
d[2,5:6] <- confint(lmodIncome)[2,]
S <- summary(lmodStatus);
d[3,1:4] <- S$coefficients[2,];
d[3,5:6] <- confint(lmodStatus)[2,]
S <- summary(lmodVerbal);
d[4,1:4] <- S$coefficients[2,];
d[4,5:6] <- confint(lmodVerbal)[2,]
S <- summary(lmodIncomeVerbal);
d[5,1:4] <- S$coefficients[2,];
d[5,5:6] <- confint(lmodIncomeVerbal)[2,]
S <- summary(lmodStatusIncome);
d[6,1:4] <- S$coefficients[2,];
d[6,5:6] <- confint(lmodStatusIncome)[2,]
S <- summary(lmodStatusVerbal);
d[7,1:4] <- S$coefficients[2,];
d[7,5:6] <- confint(lmodStatusVerbal)[2,]
S <- summary(lmodStatusFull);
d[8,1:4] <- S$coefficients[2,];
d[8,5:6] <- confint(lmodStatusFull)[2,]
S <- summary(lmodFull);
d[8,1:4] <- S$coefficients[2,];
d[8,5:6] <- confint(lmodFull)[2,]
plot(d$Estimate)
mean(d$Estimate)
hist(d$Estimate)
hist(d$t)
d$diffConfInt <- d$hiConfInt - d$loConfInt
d <- data.frame(Estimate=rep(NA,8), StdError=rep(NA,8), t=rep(NA,8), p=rep(NA,8))
View(d)
data(odor)
head(odor)
lmBaseline <- lm(odor ~ temp, odor)
lmGas <- update(lmBaseline, .~. + gas, odor)
lmPack <- update(lmBaseline, .~. + pack, odor)
lmFull <- update(lmBaseline, .~. + gas + pack, odor)
d <- d[1:4,]
rownames(d) <- c("Baseline","Gas","Pack","Full")
d[1,1:4] <- summary(lmBaseline)$coefficients[2,];
d[1,5:6] <- confint(lmBaseline)[2,]
d[,5:6] <- NA
colnames(d[,5:6]) <- c("Low","High")
colnames(d) <- c("Estimate", "StdError", "t", "p", "Low", "High")
d[1,1:4] <- summary(lmBaseline)$coefficients[2,];
d[1,5:6] <- confint(lmBaseline)[2,]
d[2,1:4] <- summary(lmGas)$coefficients[2,];
d[2,5:6] <- confint(lmGas)[2,]
d[3,1:4] <- summary(lmPack)$coefficients[2,];
d[3,5:6] <- confint(lmPack)[2,]
d[4,1:4] <- summary(lmFull)$coefficients[2,];
d[4,5:6] <- confint(lmFull)[2,]
cor(odor$gas, odor$pack)
data(teengamb)
head(teengamb)
plot1 <- ggplot(teengamb, aes(x=gamble, y=income, shape=sex)) +
geom_point()
library(ggplot2)
plot1 <- ggplot(teengamb, aes(x=gamble, y=income, shape=sex)) +
geom_point()
plot1
teengamb$sex <- factor(teengamb$sex)
plot1 <- ggplot(teengamb, aes(x=gamble, y=income, shape=sex)) +
geom_point()
plot1
plot1 <- ggplot(teengamb, aes(x=gamble, y=income, colour=sex)) +
geom_point()
plot1
lmod <- lm(gamble ~ income + sex, teengamb)
plot(gamble ~ income, shape=sex, teengamb)
plot(gamble ~ income, shape=sex, data=teengamb)
plot(gamble ~ income, lty=sex+1, data=teengamb)
data(savings)
head(savings)
lmod <- lm(sr ~ pop15 + pop75 + dpi + ddpi, savings)
fitted(lmod)
plot(fitted(lmod) ~ residuals(lmod), xlab="Fitted", ylab="Residuals")
abline(h=0)
plot(fitted(lmod), residuals(lmod), xlab="Fitted", ylab="Residuals")
abline(h=0)
?runif()
data(gala)
head(gala)
lmod <- lm(Species ~ Area + Elevation + Scruz + Nearest + Adjacent, gala)
plot(fitted(lmod), residuals(lmod), xlab="Fitted", ylab="Residuals")
abline(h=0)
lmod <- lm(sqrt(Species) ~ Area + Elevation + Scruz + Nearest + Adjacent, gala)
plot(fitted(lmod), residuals(lmod), xlab="Fitted", ylab="Residuals")
abline(h=0)
ggnorm(residuals(lmod))
qqnorm(residuals(lmod))
qqline(residuals(lmod))
plot(density(residuals(lmod)))
data("globwarm")
head(globwarm)
View(globwarm)
plot(nhtemp ~ year)
plot(nhtemp ~ year, globwarm)
plot(nhtemp ~ year, globwarm[,1800:2000])
plot(nhtemp ~ year, globwarm[1800:2000,])
g <- globwarm[1800:2000,]
plot(nhtemp ~ year, g)
View(g)
g <- globwarm[801:1001,]
plot(nhtemp ~ year, g)
remove(g)
lmod <- lm(nhtemp ~ wusa + jasper + westgreen + chesapeake + tornetrask + urals + mongolia + tasman, globwarm)
summary(lmod)
plot(residuals(lmod), year, na.omit(globwarm), ylab="Residuals")
plot(residuals(lmod), na.omit(globwarm)$year, ylab="Residuals")
plot(residuals(lmod) ~ year, na.omit(globwarm), ylab="Residuals")
abline(h=0)
n <- length(residuals(lmod))
plot(tail(residuals(lmod),n-1) ~ head(residuals(lmod),n-1), xlab=expression(hat(epsilon))[i], ylab=expression(hat(epsilon))[i+1])
plot(tail(residuals(lmod),n-1) ~ head(residuals(lmod),n-1), xlab=expression(hat(epsilon)[i]), ylab=expression(hat(epsilon)[i+1]))
abline(h=0,v=0,col=grey(0.75))
?tail
tail(c(1,2,3,4,5,6,7,8,9),1)
tail(c(1,2,3,4,5,6,7,8,9),9)
tail(c(1,2,3,4,5,6,7,8,9),8)
head(c(1,2,3,4,5,6,7,8,9),8)
cor(tail(residuals(lmod),n-1), head(residuals(lmod),n-1)))
cor(tail(residuals(lmod),n-1), head(residuals(lmod),n-1))
cor.test(tail(residuals(lmod),n-1) ~ head(residuals(lmod),n-1))
cor.test(tail(residuals(lmod),n-1), head(residuals(lmod),n-1))
require(lmtest)
library(lmtest)
dwtest(ntemp ~ wusa + jasper + westgreen + chesapeake + tornetrask + urals + mongolia + tasman, data=globwarm)
dwtest(nhtemp ~ wusa + jasper + westgreen + chesapeake + tornetrask + urals + mongolia + tasman, data=globwarm)
data(savings)
lmod <- lm(sr ~ pop15 + pop75 + dpi + ddpi, savings)
hatv <- hatvalues(lmod)
head(hatv)
sum(hatv)
countries <- row.names(savings)
halfnorm(hatv, labs=countries, ylab="Leverages")
qqnorms(rstandard(lmod))
abline(0,1)
qqnorm(rstandard(lmod))
abline(0,1)
data(star)
plot(star$temp, star$light, xlab="log(Temperature)",ylab="log(Light Intensity)")
lmod <- lm(temp ~ light, star)
abline(lmod)
range(rstudent(lmod))
lmodi <- lm(temp ~ light, data=star, subset=(temp>3.6))
abline(lmodi,lty=2)
lmod <- lm(light ~ temp, star)
lmodi <- lm(light ~ temp, data=star, subset=(temp>3.6))
plot(star$temp, star$light, xlab="log(Temperature)",ylab="log(Light Intensity)")
abline(lmod)
abline(lmodi,lty=2)
data(savings)
lmod <- lm(sr ~ pop15 + pop75 + dpi + ddpi, savings)
cook <- cooks.distance(lmod)
cook
countries <- row.names(savings)
halfnorm(cook,3,labs=countries, ylab="Cook's distances")
lmodi <- lm(sr ~ pop15 + pop75 + dpi + ddpi, savings, subset=(cook < max(cook)))
summary(lmodi)
summary(lmod)
plot(dfbeta(lmod)[,2], ylab="Change in pop15 coef")
abline(h=0)
identify()
identify(plot(dfbeta(lmod)[,2], ylab="Change in pop15 coef"))
?identify
plot(dfbeta(lmod)[,2], ylab="Change in pop15 coef")
abline(h=0)
identify()
identify(dfbeta(lmod)[,2])
rownames(savings)[c(23,49)]
plot(lmod)
Sys.getenv('PATH')
Sys.getenv('PATH')
system('g++ -v')
system('where make')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
install.packages(c("coda","mvtnorm","devtools","loo"))
library(devtools)
devtools::install_github("rmcelreath/rethinking")
ways <- c(3,8,9)
ways/sum(ways)
dbinom(6, size=9, prob=0.5)
dbinom(6, size=9, prob=0.5)
dbinom(6, size=9, prob=0.5)
dbinom(6, size=9, prob=0.5)
dbinom(3, size=9, prob=0.5)
dbinom(0, size=9, prob=0.5)
dbinom(9, size=9, prob=0.5)
dbinom(4.5, size=9, prob=0.5)
dbinom(8, size=9, prob=0.5)
dbinom(5, size=9, prob=0.5)
p <- seq(from = 0, to = 1, length.out = 1000)
prior <- rep(1,1000)
likelihood <- dbinom(6, size=9, prob=p)
posterior <- likelihood * prior
posterior <- posterior / sum(posterior)
sum(posterior)
posterior
plot(posterior)
data(cars)
plot(dist ~ speed, cars, ylab="distance")
lmod <- lm(dist ~ speed, cars)
summary(lmod)
abline(lmod)
help(I)
lmod1 <- lm(dist ~ I(speed+rnorm(50)), cars)
coef(lmod1)
abline(lmod1,lty=2)
lmod2 <- lm(dist ~ I(speed+2*rnorm(50)), cars)
coef(lmod2)
abline(lmod2,lty=3)
lmod3 <- lm(dist ~ I(speed+5*rnorm(50)), cars)
coef(lmod3)
abline(lmod3,lty=4)
data(seatpos)
data(seatpos, package="faraway")
lmod <- lm(hipcenter ~ ., seatpos)
summary(lmod)
seatpos[,-9]
round(cor(seatpos[,-9]),2)
x <- model.matrix(lmod)[,-1]
e <- eigen(t(x) %*% x)
e$values
round(e$values, 4)
vif(x)
require(faraway)
vif(x)
data(state)
statedata <- data.frame(state.x77, rown.names=state.abb)
lmod <- lm(Life.Exp ~ ., statedata)
summary(lmod)
statedata <- data.frame(state.x77, row.names=state.abb)
lmod <- lm(Life.Exp ~ ., statedata)
summary(lmod)
lmod <- update(lmod, . ~ ., - Area)
summary(lmod)
lmod <- update(lmod, . ~ ., - Illiteracy)
summary(lmod)
lmod <- update(lmod, . ~ ., - Area)
summary(lmod)
lmod <- update(lmod, . ~ . - Area)
summary(lmod)
lmod <- update(lmod, . ~ . - Illiteracy)
summary(lmod)
lmod <- update(lmod, . ~ . - Income)
summary(lmod)
lmod <- update(lmod, . ~ . - Population)
summary(lmod)
require(leaps)
install.packages("leaps")
b <- regsubsets(Life.Exp~.,data=statedata)
require(leaps)
b <- regsubsets(Life.Exp~.,data=statedata)
data(state)
statedata <- data.frame(state.x77, row.names=state.abb)
b <- regsubsets(Life.Exp~.,data=statedata)
rs <- summary(b)
rs$which
data(fat)
plot(neck ~ knee, fat)
plot(chest ~ thigh, fat)
plot(hip ~ wrist, fat)
round(cor(fat),2)
fat[,9:18]
cfat <- fat[,9:18]
prfat <- prcomp(cfat)
help(dim)
prfat$rot
dim(prfat$rot)
dim(prfat$x)
prfat$x
summary(prfat)
prfatc <- prcomp(cfat, scale=TRUE)
summary(prfatc)
round(prfatc$rotation[,2],2)
round(prfatc$rot[,2],2)
round(prfatc$rot[,1],2)
round(prfatc$rot[,1],2)
help(writeLines)
test <- c("Hello","World")
writeLines(test,sep="\n")
writeLines(test,sep="\n",file='filename.txt')
writeLines(test,sep="\n",file=filename)
writeLines(test,sep="\n",file=filename)
writeLines(test,sep="\n")
setwd("~/AUCKLAND/Foundations of Political Ideology Project/oTree_battery")
test <- seq(1,100)
test <- seq(1,100,digits=4)
test <- format(seq(1,100),digits=4)
test <- formatC(seq(1,1000), width = 4, format = "d", flag = "0")
test
test <- formatC(seq(1,5000), width = 4, format = "d", flag = "0")
remove(test)
ids <- formatC(seq(1,5000), width = 4, format = "d", flag = "0")
sims <- paste("sim_",seq(1,7))
sims
IDs <- paste(sims,ids)
IDs
IDs <- c(sims,ids)
IDs
writeLines(IDs,sep="\n")
participant_label_file <- file("participant_label_file.txt")
writeLines(IDs,sep="\n")
close(participant_label_file)
participant_label_file
participant_label_file <- file("participant_label_file.txt")
participant_label_file
writeLines(IDs,sep="\n",participant_label_file)
close(participant_label_file)
